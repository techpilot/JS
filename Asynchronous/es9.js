// Object spread operatorconst animals = {	tiger: 23,	lion: 21,	monkey: 22	bird: 31}const { tiger, ...rest } = animals;// console.log(rest)function objectSpread(p1, p2, p3) {	console.log(p1)	console.log(p2)	console.log(p3)}objectSpread(tiger, rest)const array = [1,2,3,4,5];function sum(a, b, c, d, e) {	return a + b + c + d + e;}console.log(sum(...array))// Finallyconst urls2 = [	'https://swapi.co/api/people/1',	'https://swapi.co/api/people/2',	'https://swapi.co/api/people/3',	'https://swapi.co/api/people/4']Promise.all(urls2.map(url => {	return fetch(url).then(people => people.json())}))	.then(array => {		// throw Error:		console.log('1', array[0])		console.log('1', array[1])		console.log('1', array[2])		console.log('1', array[3])	})	.catch(err => console.log('fix it', err))	.finally(() => console.log('extra'))  // new in ES9// for Await ofconst urls = [	'https://jsonplaceholder.typicode.com/users',	'https://jsonplaceholder.typicode.com/posts',	'https://jsonplaceholder.typicode.com/albums',]const getData = async function() {	const arrayOfPromises = urls.map(url => fetch(url));	for await (let request of arrayOfPromises) {		const data = await request.json();		console.log(data)	}}